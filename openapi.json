{
  "openapi": "3.0.2",
  "info": {
    "title": "MarketPlace Standard App API",
    "description": "Standard app API for the MarketPlace applications.",
    "contact": {
      "name": "The Materials MarketPlace Consortium",
      "url": "https://www.materials-marketplace.eu/",
      "email": "dirk.helm@iwm.fraunhofer.de"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "0.1.0"
  },
  "paths": {
    "/": {
      "get": {
        "tags": [
          "FrontPage"
        ],
        "summary": "Frontpage",
        "description": "Open the frontpage of the app.",
        "operationId": "frontend",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not found."
          },
          "401": {
            "description": "Not authenticated."
          },
          "500": {
            "description": "Internal server error."
          },
          "503": {
            "description": "Service unavailable."
          }
        },
        "security": [
          {
            "AuthTokenBearer": []
          }
        ]
      }
    },
    "/globalSearch": {
      "get": {
        "tags": [
          "System"
        ],
        "summary": "Global Search",
        "description": "Respond to global search queries.",
        "operationId": "globalSearch",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Query",
              "type": "string"
            },
            "name": "query",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "type": "integer",
              "default": 100
            },
            "name": "limit",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Offset",
              "type": "integer",
              "default": 0
            },
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalSearchResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated."
          },
          "422": {
            "description": "Validation error."
          },
          "500": {
            "description": "Internal server error."
          },
          "501": {
            "description": "Not implemented."
          },
          "503": {
            "description": "Service unavailable."
          }
        },
        "security": [
          {
            "AuthTokenBearer": []
          }
        ]
      }
    },
    "/health": {
      "get": {
        "tags": [
          "System"
        ],
        "summary": "Heartbeat",
        "description": "Check whether the application is running and available.",
        "operationId": "heartbeat",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated."
          },
          "500": {
            "description": "Internal server error."
          },
          "503": {
            "description": "Service unavailable."
          }
        },
        "security": [
          {
            "AuthTokenBearer": []
          }
        ]
      }
    },
    "/datasets": {
      "post": {
        "tags": [
          "DataSink"
        ],
        "summary": "Create Dataset",
        "description": "Create a new dataset.",
        "operationId": "createDataset",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DatasetModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetCreateResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated."
          },
          "500": {
            "description": "Internal server error."
          },
          "501": {
            "description": "Not implemented."
          },
          "503": {
            "description": "Service unavailable."
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "AuthTokenBearer": []
          }
        ]
      }
    },
    "/datasets/{dataset_id}": {
      "get": {
        "tags": [
          "DataSource"
        ],
        "summary": "Get Dataset",
        "description": "Retrieve an existing data set.",
        "operationId": "getDataset",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Dataset Id",
              "type": "string",
              "format": "uuid4"
            },
            "name": "dataset_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetModel"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated."
          },
          "404": {
            "description": "Not found."
          },
          "500": {
            "description": "Internal server error."
          },
          "501": {
            "description": "Not implemented."
          },
          "503": {
            "description": "Service unavailable."
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "AuthTokenBearer": []
          }
        ]
      }
    },
    "/transformations": {
      "get": {
        "tags": [
          "Transformation"
        ],
        "summary": "List Transformation",
        "description": "Retrieve a list of transformations.",
        "operationId": "getTransformationList",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "type": "integer",
              "default": 100
            },
            "name": "limit",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Offset",
              "type": "integer",
              "default": 0
            },
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransformationListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated."
          },
          "500": {
            "description": "Internal server error."
          },
          "501": {
            "description": "Not implemented."
          },
          "503": {
            "description": "Service unavailable."
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "AuthTokenBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Transformation"
        ],
        "summary": "Create Transformation",
        "description": "Create a new transformation.\n\nBy default when creating a new transformation resource its state is set to\nCREATED, meaning it is created on the remote system, but is not yet\nexecuted. To execute a transformation either set the state field directly to\nRUNNING when creating the transformation or toggle it later via the\nupdateTransformation operation.\n\nNote that the parameters of an existing transformation can not be changed.",
        "operationId": "newTransformation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewTransformationModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransformationCreateResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated."
          },
          "500": {
            "description": "Internal server error."
          },
          "501": {
            "description": "Not implemented."
          },
          "503": {
            "description": "Service unavailable."
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "AuthTokenBearer": []
          }
        ]
      }
    },
    "/transformations/{transformation_id}": {
      "get": {
        "tags": [
          "Transformation"
        ],
        "summary": "Get Transformation",
        "description": "Retrieve an existing transformation.",
        "operationId": "getTransformation",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Transformation Id",
              "type": "string",
              "format": "uuid4"
            },
            "name": "transformation_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransformationModel"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated."
          },
          "404": {
            "description": "Not found."
          },
          "500": {
            "description": "Internal server error."
          },
          "501": {
            "description": "Not implemented."
          },
          "503": {
            "description": "Service unavailable."
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "AuthTokenBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Transformation"
        ],
        "summary": "Delete Transformation",
        "description": "Delete an existing transformation.",
        "operationId": "deleteTransformation",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Transformation Id",
              "type": "string",
              "format": "uuid4"
            },
            "name": "transformation_id",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "401": {
            "description": "Not authenticated."
          },
          "404": {
            "description": "Not found."
          },
          "500": {
            "description": "Internal server error."
          },
          "501": {
            "description": "Not implemented."
          },
          "503": {
            "description": "Service unavailable."
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "AuthTokenBearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Transformation"
        ],
        "summary": "Update Transformation",
        "description": "Update an existing transformation.\n\nUsed to change the state of a transformation. When a transformation is first\ncreated it is either in a CREATED or RUNNING state. The state can then be\nchanged from CREATED to RUNNING or from RUNNING to STOPPED.  All other state\nupdate requests will result in a 409 conflict error.",
        "operationId": "updateTransformation",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Id",
              "type": "string",
              "format": "uuid4"
            },
            "name": "id",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransformationUpdateModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransformationUpdateResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated."
          },
          "404": {
            "description": "Not found."
          },
          "409": {
            "description": "The requested state is unavailable (example: trying to stop an already completed transformation)."
          },
          "500": {
            "description": "Internal server error."
          },
          "501": {
            "description": "Not implemented."
          },
          "503": {
            "description": "Service unavailable."
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "AuthTokenBearer": []
          }
        ]
      }
    },
    "/transformations/{transformation_id}/state": {
      "get": {
        "tags": [
          "Transformation"
        ],
        "summary": "Get Transformation State",
        "description": "Retrieve the state of a transformation.",
        "operationId": "getTransformationState",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Transformation Id",
              "type": "string",
              "format": "uuid4"
            },
            "name": "transformation_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransformationStateResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated."
          },
          "404": {
            "description": "Not found."
          },
          "500": {
            "description": "Internal server error."
          },
          "501": {
            "description": "Not implemented."
          },
          "503": {
            "description": "Service unavailable."
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "AuthTokenBearer": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "DatasetCreateResponse": {
        "title": "DatasetCreateResponse",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid4"
          }
        }
      },
      "DatasetModel": {
        "title": "DatasetModel",
        "type": "object",
        "properties": {}
      },
      "GlobalSearchResponse": {
        "title": "GlobalSearchResponse",
        "required": [
          "items"
        ],
        "type": "object",
        "properties": {
          "items": {
            "title": "Items",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GlobalSearchResponseItemModel"
            }
          }
        }
      },
      "GlobalSearchResponseItemModel": {
        "title": "GlobalSearchResponseItemModel",
        "type": "object",
        "properties": {
          "label": {
            "title": "Label",
            "type": "string",
            "description": "Short label describing the search result"
          },
          "description": {
            "title": "Description",
            "type": "string",
            "description": "Short label describing the search result"
          },
          "url": {
            "title": "Url",
            "maxLength": 65536,
            "minLength": 1,
            "type": "string",
            "description": "URL to search results",
            "format": "uri"
          },
          "score": {
            "title": "Score",
            "type": "number",
            "description": "Semantic relevance of search result. Can be used to infer the ordering of search result"
          }
        },
        "description": "Default query reply model"
      },
      "HTTPValidationError": {
        "title": "HTTPValidationError",
        "type": "object",
        "properties": {
          "detail": {
            "title": "Detail",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        }
      },
      "NewTransformationModel": {
        "title": "NewTransformationModel",
        "required": [
          "parameters"
        ],
        "type": "object",
        "properties": {
          "parameters": {
            "title": "Parameters",
            "type": "object"
          },
          "state": {
            "title": "State",
            "enum": [
              "CREATED",
              "RUNNING"
            ],
            "type": "string",
            "default": "CREATED"
          }
        }
      },
      "TransformationCreateResponse": {
        "title": "TransformationCreateResponse",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid4"
          }
        }
      },
      "TransformationListResponse": {
        "title": "TransformationListResponse",
        "required": [
          "items"
        ],
        "type": "object",
        "properties": {
          "items": {
            "title": "Items",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransformationModel"
            }
          }
        }
      },
      "TransformationModel": {
        "title": "TransformationModel",
        "required": [
          "id",
          "parameters"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid4"
          },
          "parameters": {
            "title": "Parameters",
            "type": "object"
          },
          "state": {
            "$ref": "#/components/schemas/TransformationState"
          }
        }
      },
      "TransformationState": {
        "title": "TransformationState",
        "enum": [
          "CREATED",
          "RUNNING",
          "STOPPED",
          "COMPLETED",
          "FAILED"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "TransformationStateResponse": {
        "title": "TransformationStateResponse",
        "required": [
          "id",
          "state"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid4"
          },
          "state": {
            "$ref": "#/components/schemas/TransformationState"
          }
        }
      },
      "TransformationUpdateModel": {
        "title": "TransformationUpdateModel",
        "required": [
          "state"
        ],
        "type": "object",
        "properties": {
          "state": {
            "title": "State",
            "enum": [
              "RUNNING",
              "STOPPED"
            ],
            "type": "string"
          }
        }
      },
      "TransformationUpdateResponse": {
        "title": "TransformationUpdateResponse",
        "required": [
          "id",
          "state"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid4"
          },
          "state": {
            "title": "State",
            "enum": [
              "RUNNING",
              "STOPPED"
            ],
            "type": "string"
          }
        }
      },
      "ValidationError": {
        "title": "ValidationError",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "type": "object",
        "properties": {
          "loc": {
            "title": "Location",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "msg": {
            "title": "Message",
            "type": "string"
          },
          "type": {
            "title": "Error Type",
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "AuthTokenBearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
